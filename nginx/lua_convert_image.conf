server {
    listen       80;
    server_name  127.0.0.1;
    root /home/www;

    location ~* \.(txt|ico)$ {
      root   /home/www/static;
    }

    location / {
       alias /home/www/static/assets/;
       expires 30d;
    }
    location ^~ /upload/ {
        root /home/www/static/;
        error_page 404 /upload/avatar.png;
        if (!-f $file) {
            rewrite "/upload/avatar.png" last;
        }
        expires max;
        tcp_nodelay off;
        tcp_nopush on;
    }

    location /images/ {
        set $image_root /home/www/static/upload;

        if ($uri !~ "/images/([a-zA-Z\w]+)/([0-9]{4})/([0-9]{2})/([0-9]{2})/([0-9]+).(.*)!(.*)"){
            rewrite "/images/(.+)" /upload/$1 last;
        }

        if ($uri ~* "/images/([a-zA-Z\w]+)/([0-9]{4})/([0-9]{2})/([0-9]{2})/([0-9]+).(.*)!(.*)"){
            set $filePath "/$1/$2/$3/$4/$5.$6";
            set $reqPath "/$1/$2/$3/$4/$5.$7";
        }
        set $file "$image_root$reqPath";
        if (-f $file) {
            rewrite "/images/(.+)" /upload$reqPath last;
        }
        if (!-f $file) {
            rewrite_by_lua '
                local index = string.find(ngx.var.reqPath, "([0-9]+)x([0-9]+)");
                local area = string.sub(ngx.var.reqPath, index);
                index = string.find(area, "([.])");
                size = string.sub(area, 0, index-1);
                local err,command = pcall(function() return "gm convert -resize " .. size .. "! " .. ngx.var.image_root .. ngx.var.filePath .. " " .. ngx.var.file end);
                if err then
                    result = os.execute(command);
                    if result then
                        ngx.redirect("/upload" .. ngx.var.reqPath);
                    else
                        ngx.redirect("/upload" .. ngx.var.filePath);
                    end;
                else
                    ngx.redirect("/upload" .. ngx.var.filePath);
                end;
            ';
        }
    }
}
